#! /bin/sh
###################################################################
# WPA Connect (command connect)
# 2009-2015 Hpsaturn v1.3
# hpsaturn@gmail.com
###################################################################
# 
# Installation:
#
# - mkdir CPATH and link symbolic on home root to this (see config section)
# - copy this script on ~/bin and make link simbolic on /usr/bin
#
#__________________________________________________________________
#
# Main Commands:
#
# Add new network:
# $ connect name ssid passw 
#
# Connect to network automatically
# $ sudo connect 
#
# Force connect to specific network
# $ sudo connect networkname
#
# Scan networks
# $ sudo connect scanning
#_______________________________________________________________
#
# Others commands (WPA):
#
# stop      (down interface and kill wpasupplicant)
# remove    (remove driver module)
# install   (install driver module)
# auto      (default)(scan and search networks on config directory then connect)
#
# Others wifi encryption:
#
# open ssid         (connect to open network)
# adhoc ssid passw  (connect to Ad-Hoc wifi)
# wep ssid passw    (connect to wep wifi) 
#
# Others:
#
# switch    (switch to eth0)
#
####################################################################
#
# REV000: Creación de funciones para open network, custom parametro
# RE0001: Creación de funcion para posible red wep
# REV002: Anexo para metro para scan basico. (scan)
# REV003: Funcion para Ad-Hoc, ej: connect adhoc essid key. Separacion
#         de algunas funciones para optimizar codigo
# REV004: Correccion de mensajes de funciones
# REV005: Anexo modo master por WEP para repartir internet facil
# REV006: Open networks y scan con enable device
# REV007: Publish on github https://github.com/hpsaturn/wconnect
# REV008: Add stop after wpa connect. Fix remove driver
# REV009: Automatic reconnection, add network, change default method

###################################################################

#config
CONFIG="$1"
CPATH=~/.wpa_networks
DEVICE=wlan0
MODULE=iwldvm
#MODULE=iwlwifi
#endconfig

#functions
wpa_connect () {
    if [ -e $CPATH/wpa_$CONFIG.conf ]; then
        check_module
        wpa_stop
        #ifconfig eth0 down
        enable_device
        iwconfig $DEVICE essid $CONFIG
        echo -n "wpa_connect.."
        wpa_supplicant -B -c $CPATH/wpa_$CONFIG.conf -i $DEVICE -s 2> /dev/null
        sleep 2
        echo  "done."
        dhclient_service
    else
        echo "config file: $CPATH/wpa_$CONFIG.conf not found!!"
        exit 1
    fi 
}

wpa_stop () {
    echo -n "wpa_stop.."
    killall wpa_supplicant 2> /dev/null
    killall dhclient 2> /dev/null
    killall dhclient 2> /dev/null
    ifconfig $DEVICE down
    echo "done."
}

wpa_auto_connect () {
    echo -n "scanning networks."
    remove_module 1> /dev/null
    echo -n "."
    sleep 1
    echo -n "."
    install_module 1> /dev/null
    echo -n "."
    enable_device 1> /dev/null
    echo -n "."
    iwlist $DEVICE scanning|grep -i ssid|sed s/ESSID:\"//|sed s/\"//|sed 's/                    //'>/tmp/current_networks
    echo -n "."
    cd $CPATH
    grep -orf /tmp/current_networks|head -n 1|awk -v FS="(wpa_|.conf)" '{print $2}'>/tmp/current_config
    CONFIG=`cat /tmp/current_config`
    echo "done."
    echo -n "connecting with: $CONFIG.."
    wpa_connect 1> /dev/null
    echo "done."
}

open_network () {
    echo -n "connect to $1.."
    iwconfig $DEVICE essid $1
    echo "done."
    dhclient_service
}

wep_network () {
    echo -n "connect to $1.."
    iwconfig $DEVICE mode managed essid $1 key s:"$2"
    echo "done."
    dhclient_service
}

adhoc_network () {
    remove_module
    sleep 2
    install_module
    sleep 2
    echo -n "connect to $1.."
    iwconfig $DEVICE mode Ad-Hoc
    sleep 1
    iwconfig $DEVICE essid $1 key s:'$2'
    echo "done."
    enable_device 
    dhclient_service
}

check_module () {
    ismodule=`lsmod | grep $MODULE`
    if [ "$ismodule" = "" ]; then
        install_module
    fi
}

remove_module () {
    echo -n "remove modules.."
    wpa_stop
    modprobe -rv $MODULE
    echo "done."
}

install_module () {
    echo -n "install modules.."
    modprobe $MODULE
    echo "done."
}

scan_networks () {
    enable_device 
    iwlist $DEVICE scanning 
}

enable_device () {
    echo -n "enable device $DEVICE.."
    ifconfig $DEVICE up
    sleep 1
    echo "done."
}

dhclient_service () {
    echo -n "dhclient service.."
    dhclient $DEVICE 2> /dev/null
    echo "done."
}

switchToEth0(){
    wpa_stop
    remove_module
    echo -n "dhclient service.."
    dhclient eth0 2> /dev/null
    echo "done."
}

network_add () {
    echo "creating config for $1.."
    wpa_passphrase "$2" "$3" > $CPATH/wpa_$1.conf
    cat $CPATH/wpa_$1.conf
    echo "done."
}

#########################################################
######################## MAIN ###########################
#########################################################

# Si parametro nulo, entonces carga configuracion
# por defecto.

if [ "$CONFIG" = "" ]; then
    wpa_auto_connect
else
    case "$1" in
        scan)
            scan_networks
            ;;
        open)
            open_network $2
            ;;
        remove)
            remove_module
            ;;
        install)
            install_module
            ;;
        stop)
            wpa_stop
            ;;
        wep)
            wep_network $2 $3   # essid key
            ;;
        adhoc)
            adhoc_network $2 $3   # essid key
            ;;
        switch)
            switchToEth0
            ;;
        auto)
            wpa_auto_connect
            ;;
        add)
            network_add $2 $3 $4
            ;;
        *)
            wpa_connect
            ;;
    esac
fi

exit 0
